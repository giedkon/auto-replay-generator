{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","status","setStatus","address","setAddress","port","setPort","useEffect","window","ipcApi","on","ip","split","map","Number","n","toString","join","send","className","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAgFeA,MApEf,WACC,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAoCA,OAlCAC,qBAAU,WACTL,GAAU,GACVM,OAAOC,OAAOC,GAAG,WAAW,SAACP,GAC5BG,EAAQH,EAAQE,MAChBD,EACCD,EAAQQ,GACNC,MAAM,KACNC,IAAIC,QACJD,KAAI,SAAAE,GAAC,OAAIA,EAAEC,SAAS,OACpBC,KAAK,KACN,IACAd,EAAQE,KAAKW,SAAS,QAGzBR,OAAOC,OAAOC,GAAG,aAAa,SAACT,GAC9BC,EAAUD,MAEXO,OAAOC,OAAOC,GAAG,UAAU,SAACT,GAC3BC,EAAUD,MAEXO,OAAOC,OAAOS,KAAK,cACnBV,OAAOC,OAAOS,KAAK,eACjB,IAaF,sBAAKC,UAAU,MAAf,UACC,sBAAKA,UAAU,aAAf,UACC,qBAAKA,UAAU,kBAAf,SACC,qBAAKA,UAAU,YAAf,+CAED,qBAAKC,QAhBS,WAChBZ,OAAOC,OAAOS,KAAK,QAeOC,UAAU,yBAClC,qBAAKC,QAdS,WAChBZ,OAAOC,OAAOS,KAAK,QAaOC,UAAU,yBAClC,qBAAKC,QAZM,WACbZ,OAAOC,OAAOS,KAAK,UAWIC,UAAU,yBAEhC,qBAAKA,UAAU,gBAAf,SACC,iCACC,gEACA,8CACehB,EADf,KAEC,sBAAMgB,UAAWlB,EAAS,SAAW,UAArC,SAAiDA,EAAS,SAAW,YAFtE,OAICI,EACA,qCACC,2DACA,iEAAyCA,EAAzC,2BAEE,cCnETgB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.06659a62.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tipcApi: {\r\n\t\t\tsend: (channel: string, ...arg: any) => void;\r\n\t\t\ton: (channel: string, func: (...arg: any) => void) => void;\r\n\t\t};\r\n\t}\r\n}\r\n\r\nfunction App() {\r\n\tconst [status, setStatus] = useState(false);\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [port, setPort] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(false);\r\n\t\twindow.ipcApi.on('address', (address: { ip: string; port: number }) => {\r\n\t\t\tsetPort(address.port);\r\n\t\t\tsetAddress(\r\n\t\t\t\taddress.ip\r\n\t\t\t\t\t.split('.')\r\n\t\t\t\t\t.map(Number)\r\n\t\t\t\t\t.map(n => n.toString(16))\r\n\t\t\t\t\t.join('-') +\r\n\t\t\t\t\t'-' +\r\n\t\t\t\t\taddress.port.toString(16)\r\n\t\t\t);\r\n\t\t});\r\n\t\twindow.ipcApi.on('argStatus', (status: boolean) => {\r\n\t\t\tsetStatus(status);\r\n\t\t});\r\n\t\twindow.ipcApi.on('status', (status: boolean) => {\r\n\t\t\tsetStatus(status);\r\n\t\t});\r\n\t\twindow.ipcApi.send('getAddress');\r\n\t\twindow.ipcApi.send('getStatus');\r\n\t}, []);\r\n\r\n\tconst minimize = () => {\r\n\t\twindow.ipcApi.send('min');\r\n\t};\r\n\tconst maximize = () => {\r\n\t\twindow.ipcApi.send('max');\r\n\t};\r\n\tconst close = () => {\r\n\t\twindow.ipcApi.send('close');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div className=\"window-bar\">\r\n\t\t\t\t<div className=\"window-drag-bar\">\r\n\t\t\t\t\t<div className=\"title-bar\">Lexogrine Auto Replay Generator</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div onClick={minimize} className=\"app-control minimize\"></div>\r\n\t\t\t\t<div onClick={maximize} className=\"app-control maximize\"></div>\r\n\t\t\t\t<div onClick={close} className=\"app-control close\"></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"App-container\">\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<p>Lexogrine Auto Replay Generator</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tReplayer ID: {address} (\r\n\t\t\t\t\t\t<span className={status ? 'online' : 'offline'}>{status ? 'online' : 'offline'}</span>)\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t{port ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<p>Run this command in CS:GO:</p>\r\n\t\t\t\t\t\t\t<code>mirv_pgl url &quot;ws://localhost:{port}&quot;; mirv_pgl start;</code>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}